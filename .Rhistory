df<-rbind(df, active_csv)
}
df<-df[-1,]
df<-df[complete.cases(df), ]
}
complete("specdata")
corr<-function (directory, threshold = 0){
str_id<-as.character(sprintf("%03.0f", 1:332))
#convert the id from a numeric vector to char vector,
#create a master df
Date<-NA
sulfate<-NA
nitrate<-NA
ID<-NA
df<-data.frame(Date, sulfate, nitrate, ID)
for (i in 1:length(str_id)){
active_csv<- read.csv(file = paste(getwd(), '/',directory, "/",str_id[i],".csv", sep=''), header=TRUE)
df<-rbind(df, active_csv)
}
df<-df[-1,]
df<-df[complete.cases(df), ]
}
complete("specdata")
str_id<-as.character(sprintf("%03.0f", 1:332))
rm(list=ls())
corr<-function (directory, threshold = 0){
str_id<-as.character(sprintf("%03.0f", 1:332))
#convert the id from a numeric vector to char vector,
#create a master df
Date<-NA
sulfate<-NA
nitrate<-NA
ID<-NA
df<-data.frame(Date, sulfate, nitrate, ID)
for (i in 1:length(str_id)){
active_csv<- read.csv(file = paste(getwd(), '/',directory, "/",str_id[i],".csv", sep=''), header=TRUE)
df<-rbind(df, active_csv)
}
df<-df[-1,]
df<-df[complete.cases(df), ]
}
corr("specdata")
corr<-function (directory, threshold = 0){
str_id<-as.character(sprintf("%03.0f", 1:30))
#convert the id from a numeric vector to char vector,
#create a master df
Date<-NA
sulfate<-NA
nitrate<-NA
ID<-NA
df<-data.frame(Date, sulfate, nitrate, ID)
for (i in 1:length(str_id)){
active_csv<- read.csv(file = paste(getwd(), '/',directory, "/",str_id[i],".csv", sep=''), header=TRUE)
df<-rbind(df, active_csv)
}
df<-df[-1,]
df<-df[complete.cases(df), ]
}
corr("specdata")
corr("specdata")
corr<-function (directory, threshold = 0){
str_id<-as.character(sprintf("%03.0f", 1:100))
#convert the id from a numeric vector to char vector,
#create a master df
Date<-NA
sulfate<-NA
nitrate<-NA
ID<-NA
df<-data.frame(Date, sulfate, nitrate, ID)
for (i in 1:length(str_id)){
active_csv<- read.csv(file = paste(getwd(), '/',directory, "/",str_id[i],".csv", sep=''), header=TRUE)
df<-rbind(df, active_csv)
}
df<-df[-1,]
df<-df[complete.cases(df), ]
df
}
corr("specdata")
source("corr.R")
corr('specdata')
source("corr.R")
corr('specdata')
source("corr.R")
corr('specdata')
source("corr.R")
corr('specdata')
source("corr.R")
corr('specdata')
length(df)
corr('specdata')
source("corr.R")
corr('specdata')
cor(1:10, 2:11)
cor(1:10, 1:10)
cor(1:10, 10:1)
source("corr.R")
corr('specdata')
source("corr.R")
corr('specdata')
source("corr.R")
corr('specdata')
source("corr.R")
corr('specdata')
source("corr.R")
corr('specdata')
source("corr.R")
corr('specdata')
source("corr.R")
corr('specdata')
cor(df$sulfate, df$nitrate)
source("corr.R")
head(corr('specdata',150))
source("corr.R")
head(corr('specdata',150))
source("corr.R")
cr<-corr('specdata', 150)
head(cr)
summary(cr)
cr<-corr('specdata', 400)
head(cr)
summary(cr)
cr<-corr("specdata",5000)
summary(cr)
cr<-corr("specdata")
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(swirl)
rm(list=ls())
library(swirl)
swirl
swirl()
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
play()
names(vect2)
nxt()
names(vect2)<-c("foo",'bar','norf')
identical(names(vect), names(vects))
identical(names(vect), names(vect2))
identical(names(vect), names(vect2))
identical(names(vect,vects))
idential(vect, vect2)
identical(vect,vects)
identical(vect,vect2)
vect['bar']
vect[c('foo','bar')]
1:20->my_vector
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_vector->ny_matrix
my_vector->my_matrix
?"matrix"
?matrix
my_matrix2(1:20,4,6)
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-c("Bill", 'Gina','Kelly','Sean')
cbind(patients, my_matrix)
my_data<-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c('patient','age','weight','bp','rating','test')
colnames(my_data)<-cnames
my_data
TRUE==TRUE
(FALSE==TURE)==FALSE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!77
5!=7
5==7
!5==7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8 ||6!=8 && 4>3.9
isTRUE(6?4)
isTRUE(6>4)
identical('twins','twins')
xor(5==6, !FALSE)
ints<-sample(10)
ints
ints>5
which(int>7)
which(ints>7)
any(x<=0)
any(x<0)
any(ints<0)
all(ints>0)
Sys.date()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,510))
my_mean(c(4,5,10))
subit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
play()
evaluate(function(x){x+1},c(1,4,2))
nxt()
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming","is",'fun!')
submit()
telegram("Test")
submit()
submit()
submit()
mad_libs("test","pk","2")
submit()
"I" %p% 'love' %p% 'R!'
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vect<-sapply(flags, class)
class(cls_vect)
sum(flags$orgn)
sum(flags$orange)
flags_color<-flags[,11:17]
flags_colors<-flags[,11:17]
flags_colors<-flags[, 11:17]
flag_colors<-flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean
)
flag_shapes<-flags[,19:23]
lapply(flag_shapes, range)
play()
lapply(flag_shapes, range)[1][1]
lapply(flag_shapes, range)[1]
lapply(flag_shapes, range)[[1]
]
lapply(flag_shapes, range)[[1]][1]
lapply(flag_shapes, range)[[1]][2]
nxt()
sapply(flag_shapes, range)
sapply(flag_shapes, range)->shape_mat
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem)elem[2])
rm(list=ls())
airquality
airquality$Wind
airquality[[2]]
colnames(airquality)
colnames(airquality)->x
class9x
class(x)
mean(airquality$Temp)
mean(airquality[[4]])
airquality[[4]]->y
class(y)
airquality[4]->y
class(y)
x[1]
mean(airquality$colnames(airquality)[4])
mean(airquality$colnames(airquality)[[4]])
j<-3
mean(airquality[[3]])
which("Wind",x)
match("Wind",x)
rbinom(1,1,0.5)
rbinom(5,1,0.5)
f<-function(x,y){x^2+y/z}
z<-5
f(110,1)
f(110,1, z=1)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
rm(list=ls())
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
View(cachemean)
mean(c(1,5,2,2), 30:60)
makeVector(1:5)
makeVector(x= 1:5)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector(x=1:5)
source(ass2.r)
source("ass2.R")
makeVector(4:22)
x<-makeVector(4:22)
x[1]
x[[1]]
cachemean(x)
x$getmean()
x$setmean()
x$set()
x$get()
cachemean(makeVector(9:44))
x
x$getmean()
x$setmean()
x$setmean(mean = 55)
x$getmean()
cachemean(x)
x$set()
x$set(y=9:100)
x$getmean()
x$setmean()
x$get()
x$getmean()
x$setmean(mean(x$get()))
x$getmean()
cachemean(x)
x$set(100:200)
cachemean(x)
vect1<-1:10
vect2<-30:40
vectList<-list(vect1, vect2)
vectList[1]
mean(vectList[1])
mean(vectList[[1]])
for (i in 1:2){mean(vectList[[i]])}
for (i in 1:2){print(mean(vectList[[i]]))}
for (i in 1:2){print(cachemean(vectList[[i]]))}
for (i in 1:2){print(cachemean$(vectList[[i]]))}
x<-VectList
x<-vectList
for (i in 1:2){ x<-makeVector(vectList[[i]])
cachemean(x)}
for (i in 1:2){ x<-makeVector(vectList[[i]])
print(cachemean(x))}
for (i in seq_along(vectList)){ x<-makeVector(vectList[[i]])
print(cachemean(x))}
mat<-matrix(1:20, 4, 5)
View(mat)
solve(x)
solve(mat)
mat<-matrix(1:16, 4, 4)
solve(mat)
mat<-matrix(11:26, 4, 4)
solve(mat)
mat<-matrix(c(11:20,25,44,21,56,32,4), 4, 4)
solve(mat)
source("ass2.R")
source("ass2.R")
View(corr)
x<-makeVector(8:32)
x$getmean()
x$get()
x$set()
cachemean(x)
x$getmean()
x$set(6:100)
x
x$get()
x$getmean()
rm(list=ls())
source('cachematrix.R')
source("cachematrix.R")
setwd(paste(getwd(),"/R Programming/Assignment 2"))
setwd(paste(getwd(),"/R Programming/Assignment 2"), sep='')
setwd(paste(getwd(),"/R Programming/Assignment 2", sep=''))
source('cachematrix.R')
mat <- matrix(c(1,0,5,2,1,6,3,4,0),nrow = 3,ncol = 3)
mat
x<-cacheSolve(mat)
t<-cacheSolve(mat)
mat
x<-makeCacheMatrix(mat)
x
rm(list=ls())
source('cachematrix.R')
mat <- matrix(c(1,0,5,2,1,6,3,4,0),nrow = 3,ncol = 3)
x<-makeCacheMatrix(mat)
x
source('cachematrix.R')
source('cachematrix.R')
mat <- matrix(c(1,0,5,2,1,6,3,4,0),nrow = 3,ncol = 3)
x<-makeCacheMatrix(mat)
x
x$get()
x$getinv()
solved<-cacheSolve(x)
solved
x$getinv()
solved
cacheSolve(x)
cacheSolve(mat)
